[[package]]
name = "ag2"
version = "0.9.9"
description = "A programming framework for agentic AI"
category = "main"
optional = false
python-versions = "<3.14,>=3.10"

[package.dependencies]
anyio = ">=3.0.0,<5.0.0"
asyncer = "0.0.8"
diskcache = "*"
docker = "*"
httpx = ">=0.28.1,<1"
packaging = "*"
pydantic = ">=2.6.1,<3"
python-dotenv = "*"
termcolor = "*"
tiktoken = "*"

[package.extras]
anthropic = ["anthropic[vertex] (>=0.23.1)"]
autobuild = ["chromadb", "huggingface-hub", "sentence-transformers (<=5.1.0)"]
bedrock = ["boto3 (>=1.34.149)"]
blendsearch = ["flaml"]
browser-use = ["browser-use (==0.1.37)"]
captainagent = ["chromadb", "huggingface-hub", "pandas", "sentence-transformers (<=5.1.0)"]
cerebras = ["cerebras-cloud-sdk (>=1.0.0)"]
cohere = ["cohere (>=5.13.5)"]
commsagent-discord = ["discord-py (>=2.4.0,<2.6)"]
commsagent-slack = ["slack-sdk (>=3.33.0,<3.40)"]
commsagent-telegram = ["telethon (>=1.38.1,<2)"]
cosmosdb = ["azure-cosmos (>=4.2.0)"]
crawl4ai = ["crawl4ai (>=0.4.247,<0.8)"]
deepseek = ["openai (>=1.99.3)"]
dev = ["cairosvg", "codespell (==2.4.1)", "detect-secrets (==1.5.0)", "dirty-equals (==0.9.0)", "fastapi (==0.116.1)", "ipykernel (==6.30.1)", "jinja2 (==3.1.6)", "mcp (>=1.11.0)", "mdx-include (==1.4.2)", "mike (==2.1.3)", "mkdocs-git-revision-date-localized-plugin (==1.4.7)", "mkdocs-glightbox (==0.4.0)", "mkdocs-literate-nav (==0.6.2)", "mkdocs-macros-plugin (==1.3.7)", "mkdocs-material (==9.6.16)", "mkdocs-minify-plugin (==0.8.0)", "mkdocs-redirects (==1.2.2)", "mkdocstrings[python] (==0.30.0)", "mock (==5.2.0)", "mypy (==1.17.1)", "nbclient (==0.10.2)", "nbconvert (==7.16.6)", "nbformat (==5.10.4)", "openai (>=1.99.3)", "pandas (==2.3.1)", "pdoc3 (==0.11.6)", "pillow", "pre-commit (==4.3.0)", "pytest-asyncio (==1.1.0)", "pytest-cov (==6.2.1)", "pytest (==8.4.1)", "pyupgrade-directories (==0.3.0)", "pyyaml (==6.0.2)", "ruff (==0.12.8)", "termcolor (==3.1.0)", "toml (==0.10.2)", "typer (==0.16.0)", "types-decorator", "types-pycurl", "types-python-dateutil", "types-pyyaml", "types-requests", "types-ujson", "uv (==0.8.8)"]
docs = ["cairosvg", "jinja2 (==3.1.6)", "mcp (>=1.11.0)", "mdx-include (==1.4.2)", "mike (==2.1.3)", "mkdocs-git-revision-date-localized-plugin (==1.4.7)", "mkdocs-glightbox (==0.4.0)", "mkdocs-literate-nav (==0.6.2)", "mkdocs-macros-plugin (==1.3.7)", "mkdocs-material (==9.6.16)", "mkdocs-minify-plugin (==0.8.0)", "mkdocs-redirects (==1.2.2)", "mkdocstrings[python] (==0.30.0)", "nbclient (==0.10.2)", "pdoc3 (==0.11.6)", "pillow", "pyyaml (==6.0.2)", "termcolor (==3.1.0)", "typer (==0.16.0)"]
duckduckgo = ["duckduckgo-search (>=8.0.2)"]
flaml = ["flaml", "numpy (>=1.24.0,<2.0.0)", "numpy (>=2.1)"]
gemini = ["google-api-core", "google-auth", "google-cloud-aiplatform", "google-genai (>=1.20.0)", "jsonschema", "pillow"]
gemini-realtime = ["google-api-core", "google-auth", "google-cloud-aiplatform", "google-genai (>=1.20.0)", "jsonschema", "pillow", "websockets (>=14.0,<16)"]
google-api = ["google-api-python-client (>=2.163.0,<3.0)", "google-auth-httplib2 (>=0.2.0,<0.3)", "google-auth-oauthlib (>=1.2.1,<2.0)"]
google-client = ["google-api-python-client (>=2.163.0,<3.0)"]
google-search = ["google-api-python-client (>=2.163.0,<3.0)"]
graph = ["matplotlib", "networkx"]
graph-rag-falkor-db = ["falkordb (>=1.0.10)", "graphrag-sdk (==0.7.1)"]
groq = ["groq (>=0.9.0)"]
interop = ["crewai[tools] (>=0.76,<1)", "langchain-community (>=0.3.12,<1)", "litellm (<=1.75.5.post1)", "pydantic-ai (==0.6.2)", "weaviate-client (>=4,<5)"]
interop-crewai = ["crewai[tools] (>=0.76,<1)", "litellm (<=1.75.5.post1)", "weaviate-client (>=4,<5)"]
interop-langchain = ["langchain-community (>=0.3.12,<1)"]
interop-pydantic-ai = ["pydantic-ai (==0.6.2)"]
jupyter-executor = ["ipykernel (>=6.29.0)", "jupyter-client (>=8.6.0)", "jupyter-kernel-gateway", "requests", "websocket-client"]
lint = ["codespell (==2.4.1)", "pyupgrade-directories (==0.3.0)", "ruff (==0.12.8)"]
lmm = ["pillow", "replicate"]
long-context = ["llmlingua (<0.3)"]
mathchat = ["sympy", "wolframalpha"]
mcp = ["mcp (>=1.11.0)"]
mcp-proxy-gen = ["fastapi-code-generator (>=0.5.4)", "fastapi (>=0.112,<1)", "pyyaml", "requests", "typer"]
mistral = ["mistralai (>=1.0.1)"]
neo4j = ["docx2txt (==0.9)", "llama-index-graph-stores-neo4j (==0.5.0)", "llama-index-readers-web (==0.5.0)", "llama-index (>=0.12,<1)"]
ollama = ["fix-busted-json (>=0.0.18)", "ollama (>=0.4.7)"]
openai = ["openai (>=1.99.3)"]
openai-realtime = ["openai (>=1.99.3)", "openai"]
rag = ["chromadb (>=0.5,<2)", "docling (>=2.15.1,<3)", "llama-index-embeddings-huggingface (==0.6.0)", "llama-index-llms-langchain (==0.7.0)", "llama-index-vector-stores-chroma (==0.4.1)", "llama-index-vector-stores-mongodb (==0.8.0)", "llama-index (>=0.12,<1)", "requests (>=2.32.3,<3)", "selenium (>=4.28.1,<5)", "webdriver-manager (==4.0.2)"]
redis = ["redis"]
retrievechat = ["beautifulsoup4", "chromadb (==1.0.16)", "ipython", "markdownify", "protobuf (==6.31.1)", "pypdf", "sentence-transformers (<=5.1.0)"]
retrievechat-couchbase = ["beautifulsoup4", "chromadb (==1.0.16)", "couchbase (>=4.3.0)", "ipython", "markdownify", "numpy", "protobuf (==6.31.1)", "pypdf", "sentence-transformers (<=5.1.0)"]
retrievechat-mongodb = ["beautifulsoup4", "chromadb (==1.0.16)", "ipython", "markdownify", "numpy", "protobuf (==6.31.1)", "pymongo (>=4.0.0)", "pypdf", "sentence-transformers (<=5.1.0)"]
retrievechat-pgvector = ["beautifulsoup4", "chromadb (==1.0.16)", "ipython", "markdownify", "pgvector (>=0.2.5)", "protobuf (==6.31.1)", "psycopg (>=3.1.18)", "psycopg[binary] (>=3.1.18)", "pypdf", "sentence-transformers (<=5.1.0)"]
retrievechat-qdrant = ["beautifulsoup4", "chromadb (==1.0.16)", "fastembed (>=0.3.1)", "ipython", "markdownify", "protobuf (==6.31.1)", "pypdf", "qdrant-client", "sentence-transformers (<=5.1.0)"]
tavily = ["tavily-python (>=0.7.4)"]
teachable = ["chromadb"]
test = ["dirty-equals (==0.9.0)", "fastapi (==0.116.1)", "ipykernel (==6.30.1)", "mcp (>=1.11.0)", "mock (==5.2.0)", "nbconvert (==7.16.6)", "nbformat (==5.10.4)", "pandas (==2.3.1)", "pytest-asyncio (==1.1.0)", "pytest-cov (==6.2.1)", "pytest (==8.4.1)"]
together = ["together (>=1.2)"]
twilio = ["fastapi (>=0.115.0,<1)", "twilio (>=9.3.2)", "uvicorn (>=0.30.6,<1)"]
types = ["dirty-equals (==0.9.0)", "fastapi (==0.116.1)", "ipykernel (==6.30.1)", "mcp (>=1.11.0)", "mock (==5.2.0)", "mypy (==1.17.1)", "nbconvert (==7.16.6)", "nbformat (==5.10.4)", "openai (>=1.99.3)", "pandas (==2.3.1)", "pytest-asyncio (==1.1.0)", "pytest-cov (==6.2.1)", "pytest (==8.4.1)", "types-decorator", "types-pycurl", "types-python-dateutil", "types-pyyaml", "types-requests", "types-ujson"]
websockets = ["websockets (>=14.0,<16)"]
websurfer = ["beautifulsoup4", "markdownify", "pathvalidate", "pdfminer-six"]
wikipedia = ["wikipedia-api (>=0.8.1,<1.0)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "anyio"
version = "4.10.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]

[[package]]
name = "async-timeout"
version = "4.0.3"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "asyncer"
version = "0.0.8"
description = "Asyncer, async and await, focused on developer experience."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.4.0,<5.0"

[[package]]
name = "autogen"
version = "0.9.9"
description = "Alias package for ag2"
category = "main"
optional = false
python-versions = "<3.14,>=3.10"

[package.dependencies]
ag2 = "0.9.9"

[package.extras]
anthropic = ["ag2[anthropic] (==0.9.9)"]
autobuild = ["ag2[autobuild] (==0.9.9)"]
bedrock = ["ag2[bedrock] (==0.9.9)"]
blendsearch = ["ag2[blendsearch] (==0.9.9)"]
browser-use = ["ag2[browser-use] (==0.9.9)"]
captainagent = ["ag2[captainagent] (==0.9.9)"]
cerebras = ["ag2[cerebras] (==0.9.9)"]
cohere = ["ag2[cohere] (==0.9.9)"]
commsagent-discord = ["ag2[commsagent-discord] (==0.9.9)"]
commsagent-slack = ["ag2[commsagent-slack] (==0.9.9)"]
commsagent-telegram = ["ag2[commsagent-telegram] (==0.9.9)"]
cosmosdb = ["ag2[cosmosdb] (==0.9.9)"]
crawl4ai = ["ag2[crawl4ai] (==0.9.9)"]
deepseek = ["ag2[deepseek] (==0.9.9)"]
dev = ["ag2[dev] (==0.9.9)"]
docs = ["ag2[docs] (==0.9.9)"]
duckduckgo = ["ag2[duckduckgo] (==0.9.9)"]
flaml = ["ag2[flaml] (==0.9.9)"]
gemini = ["ag2[gemini] (==0.9.9)"]
gemini-realtime = ["ag2[gemini-realtime] (==0.9.9)"]
google-api = ["ag2[google-api] (==0.9.9)"]
google-client = ["ag2[google-client] (==0.9.9)"]
google-search = ["ag2[google-search] (==0.9.9)"]
graph = ["ag2[graph] (==0.9.9)"]
graph-rag-falkor-db = ["ag2[graph-rag-falkor-db] (==0.9.9)"]
groq = ["ag2[groq] (==0.9.9)"]
interop = ["ag2[interop] (==0.9.9)"]
interop-crewai = ["ag2[interop-crewai] (==0.9.9)"]
interop-langchain = ["ag2[interop-langchain] (==0.9.9)"]
interop-pydantic-ai = ["ag2[interop-pydantic-ai] (==0.9.9)"]
jupyter-executor = ["ag2[jupyter-executor] (==0.9.9)"]
lint = ["ag2[lint] (==0.9.9)"]
lmm = ["ag2[lmm] (==0.9.9)"]
long-context = ["ag2[long-context] (==0.9.9)"]
mathchat = ["ag2[mathchat] (==0.9.9)"]
mcp = ["ag2[mcp] (==0.9.9)"]
mcp-proxy-gen = ["ag2[mcp-proxy-gen] (==0.9.9)"]
mistral = ["ag2[mistral] (==0.9.9)"]
neo4j = ["ag2[neo4j] (==0.9.9)"]
ollama = ["ag2[ollama] (==0.9.9)"]
openai = ["ag2[openai] (==0.9.9)"]
openai-realtime = ["ag2[openai-realtime] (==0.9.9)"]
rag = ["ag2[rag] (==0.9.9)"]
redis = ["ag2[redis] (==0.9.9)"]
retrievechat = ["ag2[retrievechat] (==0.9.9)"]
retrievechat-couchbase = ["ag2[retrievechat-couchbase] (==0.9.9)"]
retrievechat-mongodb = ["ag2[retrievechat-mongodb] (==0.9.9)"]
retrievechat-pgvector = ["ag2[retrievechat-pgvector] (==0.9.9)"]
retrievechat-qdrant = ["ag2[retrievechat-qdrant] (==0.9.9)"]
tavily = ["ag2[tavily] (==0.9.9)"]
teachable = ["ag2[teachable] (==0.9.9)"]
test = ["ag2[test] (==0.9.9)"]
together = ["ag2[together] (==0.9.9)"]
twilio = ["ag2[twilio] (==0.9.9)"]
types = ["ag2[types] (==0.9.9)"]
websockets = ["ag2[websockets] (==0.9.9)"]
websurfer = ["ag2[websurfer] (==0.9.9)"]
wikipedia = ["ag2[wikipedia] (==0.9.9)"]

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "charset-normalizer"
version = "3.4.3"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "decorator"
version = "5.2.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "diskcache"
version = "5.6.3"
description = "Disk Cache -- Disk and file backed persistent cache."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "distro"
version = "1.9.0"
description = "Distro - an OS platform information API"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "docker"
version = "7.1.0"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pywin32 = {version = ">=304", markers = "sys_platform == \"win32\""}
requests = ">=2.26.0"
urllib3 = ">=1.26.0"

[package.extras]
dev = ["coverage (==7.2.7)", "pytest-cov (==4.1.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.2)", "ruff (==0.1.8)"]
docs = ["myst-parser (==0.18.0)", "sphinx (==5.1.1)"]
ssh = ["paramiko (>=2.4.3)"]
websockets = ["websocket-client (>=1.3.0)"]

[[package]]
name = "exceptiongroup"
version = "1.3.0"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = {version = ">=4.6.0", markers = "python_version < \"3.13\""}

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "greenlet"
version = "3.2.4"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
docs = ["sphinx", "furo"]
test = ["objgraph", "psutil", "setuptools"]

[[package]]
name = "groq"
version = "0.31.0"
description = "The official Python library for the groq API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.5.0,<5"
distro = ">=1.7.0,<2"
httpx = ">=0.23.0,<1"
pydantic = ">=1.9.0,<3"
sniffio = "*"
typing-extensions = ">=4.10,<5"

[package.extras]
aiohttp = ["aiohttp", "httpx-aiohttp (>=0.1.8)"]

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = ">=1.0.0,<2.0.0"
idna = "*"

[package.extras]
brotli = ["brotli", "brotlicffi"]
cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["ruff (>=0.6.2)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "flake8 (>=7.1.1)"]

[[package]]
name = "jiter"
version = "0.10.0"
description = "Fast iterable JSON parser."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "jsonpatch"
version = "1.33"
description = "Apply JSON-Patches (RFC 6902)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.dependencies]
jsonpointer = ">=1.9"

[[package]]
name = "jsonpointer"
version = "3.0.0"
description = "Identify specific nodes in a JSON document (RFC 6901)"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "langchain"
version = "0.3.27"
description = "Building applications with LLMs through composability"
category = "main"
optional = false
python-versions = "<4.0,>=3.9"

[package.dependencies]
async-timeout = {version = ">=4.0.0,<5.0.0", markers = "python_version < \"3.11\""}
langchain-core = ">=0.3.72,<1.0.0"
langchain-text-splitters = ">=0.3.9,<1.0.0"
langsmith = ">=0.1.17"
pydantic = ">=2.7.4,<3.0.0"
PyYAML = ">=5.3"
requests = ">=2,<3"
SQLAlchemy = ">=1.4,<3"

[package.extras]
community = ["langchain-community"]
anthropic = ["langchain-anthropic"]
openai = ["langchain-openai"]
azure-ai = ["langchain-azure-ai"]
cohere = ["langchain-cohere"]
google-vertexai = ["langchain-google-vertexai"]
google-genai = ["langchain-google-genai"]
fireworks = ["langchain-fireworks"]
ollama = ["langchain-ollama"]
together = ["langchain-together"]
mistralai = ["langchain-mistralai"]
huggingface = ["langchain-huggingface"]
groq = ["langchain-groq"]
aws = ["langchain-aws"]
deepseek = ["langchain-deepseek"]
xai = ["langchain-xai"]
perplexity = ["langchain-perplexity"]

[[package]]
name = "langchain-core"
version = "0.3.75"
description = "Building applications with LLMs through composability"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
jsonpatch = ">=1.33,<2.0"
langsmith = ">=0.3.45"
packaging = ">=23.2"
pydantic = ">=2.7.4"
PyYAML = ">=5.3"
tenacity = ">=8.1.0,<8.4.0 || >8.4.0,<10.0.0"
typing-extensions = ">=4.7"

[[package]]
name = "langchain-groq"
version = "0.3.7"
description = "An integration package connecting Groq and LangChain"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
groq = ">=0.30.0,<1"
langchain-core = ">=0.3.72,<1.0.0"

[[package]]
name = "langchain-ollama"
version = "0.3.7"
description = "An integration package connecting Ollama and LangChain"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.3.74,<1.0.0"
ollama = ">=0.5.3,<1.0.0"

[[package]]
name = "langchain-openai"
version = "0.3.32"
description = "An integration package connecting OpenAI and LangChain"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.3.74,<1.0.0"
openai = ">=1.99.9,<2.0.0"
tiktoken = ">=0.7,<1"

[[package]]
name = "langchain-text-splitters"
version = "0.3.9"
description = "LangChain text splitting utilities"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.3.72,<1.0.0"

[[package]]
name = "langgraph"
version = "0.6.6"
description = "Building stateful, multi-actor applications with LLMs"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.1"
langgraph-checkpoint = ">=2.1.0,<3.0.0"
langgraph-prebuilt = ">=0.6.0,<0.7.0"
langgraph-sdk = ">=0.2.2,<0.3.0"
pydantic = ">=2.7.4"
xxhash = ">=3.5.0"

[[package]]
name = "langgraph-checkpoint"
version = "2.1.1"
description = "Library with base interfaces for LangGraph checkpoint savers."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.2.38"
ormsgpack = ">=1.10.0"

[[package]]
name = "langgraph-prebuilt"
version = "0.6.4"
description = "Library with high-level APIs for creating and executing LangGraph agents and tools."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
langchain-core = ">=0.3.67"
langgraph-checkpoint = ">=2.1.0,<3.0.0"

[[package]]
name = "langgraph-sdk"
version = "0.2.3"
description = "SDK for interacting with LangGraph API"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
httpx = ">=0.25.2"
orjson = ">=3.10.1"

[[package]]
name = "langsmith"
version = "0.4.20"
description = "Client library to connect to the LangSmith LLM Tracing and Evaluation Platform."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
httpx = ">=0.23.0,<1"
orjson = {version = ">=3.9.14", markers = "platform_python_implementation != \"PyPy\""}
packaging = ">=23.2"
pydantic = ">=1,<3"
requests = ">=2.0.0"
requests-toolbelt = ">=1.0.0"
zstandard = ">=0.23.0"

[package.extras]
langsmith-pyo3 = ["langsmith-pyo3 (>=0.1.0rc2)"]
openai-agents = ["openai-agents (>=0.0.3)"]
otel = ["opentelemetry-api (>=1.30.0)", "opentelemetry-exporter-otlp-proto-http (>=1.30.0)", "opentelemetry-sdk (>=1.30.0)"]
pytest = ["pytest (>=7.0.0)", "rich (>=13.9.4)", "vcrpy (>=7.0.0)"]
vcr = ["vcrpy (>=7.0.0)"]

[[package]]
name = "msgpack"
version = "1.1.1"
description = "MessagePack serializer"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "ollama"
version = "0.5.3"
description = "The official Python client for Ollama."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
httpx = ">=0.27"
pydantic = ">=2.9"

[[package]]
name = "openai"
version = "1.102.0"
description = "The official Python library for the openai API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.5.0,<5"
distro = ">=1.7.0,<2"
httpx = ">=0.23.0,<1"
jiter = ">=0.4.0,<1"
pydantic = ">=1.9.0,<3"
sniffio = "*"
tqdm = ">4"
typing-extensions = ">=4.11,<5"

[package.extras]
aiohttp = ["aiohttp", "httpx-aiohttp (>=0.1.8)"]
datalib = ["numpy (>=1)", "pandas-stubs (>=1.1.0.11)", "pandas (>=1.2.3)"]
realtime = ["websockets (>=13,<16)"]
voice-helpers = ["numpy (>=2.0.2)", "sounddevice (>=0.5.1)"]

[[package]]
name = "orjson"
version = "3.11.3"
description = "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "ormsgpack"
version = "1.10.0"
description = "Fast, correct Python msgpack library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pika"
version = "1.3.2"
description = "Pika Python AMQP Client Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
gevent = ["gevent"]
tornado = ["tornado"]
twisted = ["twisted"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pydantic"
version = "2.11.7"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata"]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pymetasploit3"
version = "1.0.6"
description = "A full-fledged msfrpc library for Metasploit framework."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
msgpack = "*"
requests = "*"
retry = "*"

[[package]]
name = "python-dotenv"
version = "1.1.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "python-nmap"
version = "0.7.1"
description = "This is a python class to use nmap and access scan results from python3"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "311"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "regex"
version = "2025.7.34"
description = "Alternative regular expression module, to replace re."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "requests"
version = "2.32.5"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
certifi = ">=2017.4.17"
charset_normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-toolbelt"
version = "1.0.0"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "retry"
version = "0.9.2"
description = "Easy to use retry decorator."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
decorator = ">=3.4.2"
py = ">=1.4.26,<2.0.0"

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "sqlalchemy"
version = "2.0.43"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
greenlet = {version = ">=1", markers = "python_version < \"3.14\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}
typing-extensions = ">=4.6.0"

[package.extras]
asyncio = ["greenlet (>=1)"]
mypy = ["mypy (>=0.910)"]
mssql = ["pyodbc"]
mssql-pymssql = ["pymssql"]
mssql-pyodbc = ["pyodbc"]
mysql = ["mysqlclient (>=1.4.0)"]
mysql-connector = ["mysql-connector-python"]
mariadb-connector = ["mariadb (>=1.0.1,!=1.1.2,!=1.1.5,!=1.1.10)"]
oracle = ["cx_oracle (>=8)"]
oracle-oracledb = ["oracledb (>=1.0.1)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql-pg8000 = ["pg8000 (>=1.29.1)"]
postgresql-asyncpg = ["greenlet (>=1)", "asyncpg"]
postgresql-psycopg2binary = ["psycopg2-binary"]
postgresql-psycopg2cffi = ["psycopg2cffi"]
postgresql-psycopg = ["psycopg (>=3.0.7)"]
postgresql-psycopgbinary = ["psycopg[binary] (>=3.0.7)"]
pymysql = ["pymysql"]
aiomysql = ["greenlet (>=1)", "aiomysql (>=0.2.0)"]
aioodbc = ["greenlet (>=1)", "aioodbc"]
asyncmy = ["greenlet (>=1)", "asyncmy (>=0.2.3,!=0.2.4,!=0.2.6)"]
aiosqlite = ["greenlet (>=1)", "aiosqlite", "typing_extensions (!=3.10.0.1)"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "tenacity"
version = "9.1.2"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
doc = ["reno", "sphinx"]
test = ["pytest", "tornado (>=4.5)", "typeguard"]

[[package]]
name = "termcolor"
version = "3.1.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "tiktoken"
version = "0.11.0"
description = "tiktoken is a fast BPE tokeniser for use with OpenAI's models"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
regex = ">=2022.1.18"
requests = ">=2.26.0"

[package.extras]
blobfile = ["blobfile (>=2)"]

[[package]]
name = "tqdm"
version = "4.67.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-asyncio (>=0.24)", "nbval"]
discord = ["requests"]
slack = ["slack-sdk"]
telegram = ["requests"]
notebook = ["ipywidgets (>=6)"]

[[package]]
name = "typing-extensions"
version = "4.15.0"
description = "Backported and Experimental Type Hints for Python 3.9+"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "urllib3"
version = "2.5.0"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "xxhash"
version = "3.5.0"
description = "Python binding for xxHash"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "zstandard"
version = "0.24.0"
description = "Zstandard bindings for Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
cffi = ["cffi (>=1.17)"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.10,<3.14"
content-hash = "1622f7003d506ec7934a7c6a38be49606c69da20028c895f3ed189bdab7f6add"

[metadata.files]
ag2 = []
annotated-types = []
anyio = []
async-timeout = []
asyncer = []
autogen = []
certifi = []
charset-normalizer = []
colorama = []
decorator = []
diskcache = []
distro = []
docker = []
exceptiongroup = []
greenlet = []
groq = []
h11 = []
httpcore = []
httpx = []
idna = []
jiter = []
jsonpatch = []
jsonpointer = []
langchain = []
langchain-core = []
langchain-groq = []
langchain-ollama = []
langchain-openai = []
langchain-text-splitters = []
langgraph = []
langgraph-checkpoint = []
langgraph-prebuilt = []
langgraph-sdk = []
langsmith = []
msgpack = []
ollama = []
openai = []
orjson = []
ormsgpack = []
packaging = []
pika = []
py = []
pydantic = []
pydantic-core = []
pymetasploit3 = []
python-dotenv = []
python-nmap = []
pywin32 = []
pyyaml = []
regex = []
requests = []
requests-toolbelt = []
retry = []
sniffio = []
sqlalchemy = []
tenacity = []
termcolor = []
tiktoken = []
tqdm = []
typing-extensions = []
typing-inspection = []
urllib3 = []
xxhash = []
zstandard = []
